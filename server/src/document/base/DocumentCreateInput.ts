/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  IsOptional,
  IsString,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { EnumDocumentDocType } from "./EnumDocumentDocType";
import { ItemCreateNestedManyWithoutDocumentsInput } from "./ItemCreateNestedManyWithoutDocumentsInput";
import { Type } from "class-transformer";
import { EnumDocumentStatus } from "./EnumDocumentStatus";
import { EnumDocumentVatType } from "./EnumDocumentVatType";

@InputType()
class DocumentCreateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  amount?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  amountBeforeVat?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumDocumentDocType,
  })
  @IsEnum(EnumDocumentDocType)
  @IsOptional()
  @Field(() => EnumDocumentDocType, {
    nullable: true,
  })
  docType?: "Receipt" | "Invoice" | null;

  @ApiProperty({
    required: false,
    type: () => ItemCreateNestedManyWithoutDocumentsInput,
  })
  @ValidateNested()
  @Type(() => ItemCreateNestedManyWithoutDocumentsInput)
  @IsOptional()
  @Field(() => ItemCreateNestedManyWithoutDocumentsInput, {
    nullable: true,
  })
  items?: ItemCreateNestedManyWithoutDocumentsInput;

  @ApiProperty({
    required: false,
    enum: EnumDocumentStatus,
  })
  @IsEnum(EnumDocumentStatus)
  @IsOptional()
  @Field(() => EnumDocumentStatus, {
    nullable: true,
  })
  status?: "Open" | "Closed" | null;

  @ApiProperty({
    required: false,
    enum: EnumDocumentVatType,
  })
  @IsEnum(EnumDocumentVatType)
  @IsOptional()
  @Field(() => EnumDocumentVatType, {
    nullable: true,
  })
  vatType?: "Default" | "Included" | "Exempt" | null;
}

export { DocumentCreateInput as DocumentCreateInput };
