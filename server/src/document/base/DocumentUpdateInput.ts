/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  IsOptional,
  IsDate,
  IsString,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumDocumentDiscountType } from "./EnumDocumentDiscountType";
import { EnumDocumentDocType } from "./EnumDocumentDocType";
import { ItemUpdateManyWithoutDocumentsInput } from "./ItemUpdateManyWithoutDocumentsInput";
import { EnumDocumentStatus } from "./EnumDocumentStatus";
import { EnumDocumentVatType } from "./EnumDocumentVatType";

@InputType()
class DocumentUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  amount?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  amountBeforeVat?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  date?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  discountAmount?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumDocumentDiscountType,
  })
  @IsEnum(EnumDocumentDiscountType)
  @IsOptional()
  @Field(() => EnumDocumentDiscountType, {
    nullable: true,
  })
  discountType?: "Sum" | "Percentage" | null;

  @ApiProperty({
    required: false,
    enum: EnumDocumentDocType,
  })
  @IsEnum(EnumDocumentDocType)
  @IsOptional()
  @Field(() => EnumDocumentDocType, {
    nullable: true,
  })
  docType?:
    | "Receipt"
    | "Invoice"
    | "PriceOffer"
    | "Order"
    | "DeliveryCertificate"
    | "ReturnCertificate"
    | "TransactionAccount"
    | "TaxInvoiceReceipt"
    | "CreditInvoice"
    | "PurchaseOrder"
    | "ReceivingADeposit"
    | "DepositWithdrawal"
    | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dueDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => ItemUpdateManyWithoutDocumentsInput,
  })
  @ValidateNested()
  @Type(() => ItemUpdateManyWithoutDocumentsInput)
  @IsOptional()
  @Field(() => ItemUpdateManyWithoutDocumentsInput, {
    nullable: true,
  })
  items?: ItemUpdateManyWithoutDocumentsInput;

  @ApiProperty({
    required: false,
    enum: EnumDocumentStatus,
  })
  @IsEnum(EnumDocumentStatus)
  @IsOptional()
  @Field(() => EnumDocumentStatus, {
    nullable: true,
  })
  status?: "Open" | "Closed" | null;

  @ApiProperty({
    required: false,
    enum: EnumDocumentVatType,
  })
  @IsEnum(EnumDocumentVatType)
  @IsOptional()
  @Field(() => EnumDocumentVatType, {
    nullable: true,
  })
  vatType?: "Default" | "Included" | "Exempt" | null;
}

export { DocumentUpdateInput as DocumentUpdateInput };
